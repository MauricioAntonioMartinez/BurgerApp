{"version":3,"sources":["components/Order/CheckOutSummary/CheckOutSummary.css","containers/CheckOut/ContactData/ContactData.css","components/Order/CheckOutSummary/CheckOutSumary.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/UI/Input/Input.js","components/UI/Input/Input.css"],"names":["module","exports","CheckOutSumary","props","className","classes","CheckoutSummary","style","width","margin","Burger","ingredients","ingridients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","conutry","email","isEmail","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredientes","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdent","updatedFormElement","updatedObject","target","checkValidity","updatedOrderForm","inputIdentifiers","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","Input","elementName","invalid","shouldValidate","Changed","disabled","loading","Spinner","Component","connect","BurgerBuilder","totalPrice","auth","dispatch","actions","withError","axios","CheckOut","history","goBack","checkoutContinue","replace","summary","to","purchaseRedirect","purchase","path","match","component","purchased","inputElement","ValidationError","inputClasses","InputElement","Invalid","join","onChange","option","Label","label"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,gBAAkB,iF,oBCApCD,EAAOC,QAAU,CAAC,YAAc,wE,mKCoBjBC,EAjBQ,SAACC,GACtB,OACE,yBAAKC,UAAWC,IAAQC,iBACtB,wDACA,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnC,kBAACC,EAAA,EAAD,CAAQC,YAAaR,EAAMS,eAE7B,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASZ,EAAMa,mBAAxC,UAGA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASZ,EAAMc,mBAAzC,c,yFCHOC,EAAb,4MACEC,MAAQ,CACNC,UAAW,CACTC,KAAM,CACJC,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,aAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXC,OAAQ,CACNT,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,UAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXE,QAAS,CACPV,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,YAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,EACVK,UAAW,EACXC,UAAW,IAEbL,OAAO,EACPC,SAAS,GAEXK,QAAS,CACPb,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,WAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXM,MAAO,CACLd,YAAa,QACbC,cAAe,CACbC,KAAM,QACNC,YAAa,eAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,EACVS,SAAS,GAEXR,OAAO,EACPC,SAAS,GAEXQ,eAAgB,CACdhB,YAAa,SACbC,cAAe,CACbgB,QAAS,CACP,CAAEb,MAAO,UAAWc,aAAc,WAClC,CAAEd,MAAO,WAAYc,aAAc,cAGvCX,OAAO,EACPF,WAAY,GACZD,MAAO,YAGXe,aAAa,GApFjB,EAuFEC,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAK3B,MAAMC,UAC3CyB,EAASC,GAAyB,EAAK3B,MAAMC,UAC3C0B,GACApB,MAEJ,IAAMqB,EAAQ,CACZC,aAAc,EAAK7C,MAAM8C,KACzBC,MAAO,EAAK/C,MAAM+C,MAClBC,UAAWN,EACXO,OAAQ,EAAKjD,MAAMiD,QAErB,EAAKjD,MAAMkD,cAAcN,EAAO,EAAK5C,MAAMmD,QAtG/C,EAyGEC,oBAAsB,SAACZ,EAAOa,GAC5B,IAAMC,EAAqBC,YAAc,EAAKvC,MAAMC,UAAUoC,GAAa,CACzE9B,MAAOiB,EAAMgB,OAAOjC,MACpBG,MAAO+B,YACLjB,EAAMgB,OAAOjC,MACb,EAAKP,MAAMC,UAAUoC,GAAY7B,YAEnCG,SAAS,IAEL+B,EAAmBH,YAAc,EAAKvC,MAAMC,UAAZ,eACnCoC,EAAaC,IAGZhB,GAAc,EAClB,IAAK,IAAIqB,KAAoBD,EAC3BpB,EAAcoB,EAAiBC,GAAkBjC,OAASY,EAE5D,EAAKsB,SAAS,CAAE3C,UAAWyC,EAAkBpB,iBA1HjD,uDA6HY,IAAD,OACDuB,EAAoB,GAC1B,IAAK,IAAIC,KAAOC,KAAK/C,MAAMC,UACzB4C,EAAkBG,KAAK,CACrBC,GAAIH,EACJI,OAAQH,KAAK/C,MAAMC,UAAU6C,KAGjC,IAAIK,EACF,0BAAMC,SAAUL,KAAKxB,cAClBsB,EAAkBQ,KAAI,SAACC,GACtB,OACE,kBAACC,EAAA,EAAD,CACET,IAAKQ,EAAYL,GACjBO,YAAaF,EAAYL,GACzB9C,YAAamD,EAAYJ,OAAO/C,YAChCC,cAAekD,EAAYJ,OAAO9C,cAClCG,MAAO+C,EAAYJ,OAAO3C,MAC1BkD,SAAUH,EAAYJ,OAAOxC,MAC7BgD,eAAgBJ,EAAYJ,OAAO1C,WACnCG,QAAS2C,EAAYJ,OAAOvC,QAC5BgD,QAAS,SAACnC,GAAD,OACP,EAAKY,oBAAoBZ,EAAO8B,EAAYL,UAKpD,kBAACvD,EAAA,EAAD,CACEC,QAAQ,UACRC,QAASmD,KAAKxB,aACdqC,UAAWb,KAAK/C,MAAMsB,aAHxB,UAYJ,OAHIyB,KAAK/D,MAAM6E,UACbV,EAAO,kBAACW,EAAA,EAAD,OAGP,yBAAK7E,UAAWC,IAAQa,aACtB,uDACCoD,OAvKT,GAAiCY,aA6LlBC,eAhBS,SAAChE,GACvB,MAAO,CACL8B,KAAM9B,EAAMiE,cAAczE,YAC1BuC,MAAO/B,EAAMiE,cAAcC,WAC3BL,QAAS7D,EAAM4B,MAAMiC,QACrB1B,MAAOnC,EAAMmE,KAAKhC,MAClBF,OAAQjC,EAAMmE,KAAKlC,WAII,SAACmC,GAC1B,MAAO,CACLlC,cAAe,SAACF,EAAWG,GAAZ,OACbiC,EAASC,IAAuBrC,EAAWG,QAGlC6B,CAGbM,YAAUvE,EAAawE,MCrMZC,EAAb,4MACE3E,kBAAoB,kBAAM,EAAKb,MAAMyF,QAAQC,UAD/C,EAEEC,iBAAmB,kBAAM,EAAK3F,MAAMyF,QAAQG,QAAQ,2BAFtD,uDAKI,IAAIC,EAAU,kBAAC,IAAD,CAAUC,GAAG,MAC3B,GAAI/B,KAAK/D,MAAM8C,KAAM,CACnB,IAAMiD,EAAmBhC,KAAK/D,MAAMgG,SAAW,kBAAC,IAAD,CAAUF,GAAG,MAAS,KACrED,EACE,6BACGE,EACD,kBAAC,EAAD,CACEtF,YAAasD,KAAK/D,MAAM8C,KACxBjC,kBAAmBkD,KAAKlD,kBACxBC,kBAAmBiD,KAAK4B,mBAE1B,kBAAC,IAAD,CACEM,KAAMlC,KAAK/D,MAAMkG,MAAMD,KAAO,gBAC9BE,UAAWpF,KAKnB,OAAO8E,MAvBX,GAA8Bd,aAiCfC,uBAPS,SAAChE,GACvB,MAAO,CACL8B,KAAM9B,EAAMiE,cAAczE,YAC1BwF,SAAUhF,EAAM4B,MAAMwD,aAIXpB,CAAyBQ,I,gCCvCxC,qCAsEejB,IAnED,SAACvE,GACb,IAAIqG,EAAe,KACfC,EAAkB,KAChBC,EAAe,CAACrG,IAAQsG,cAO9B,OANIxG,EAAMyE,SAAWzE,EAAM0E,gBAAkB1E,EAAM2B,UACjD4E,EAAavC,KAAK9D,IAAQuG,SAC1BH,EACE,iDAAuBtG,EAAMwE,YAA7B,mBAGIxE,EAAMmB,aACZ,IAAK,QACHkF,EACE,yCACEpG,UAAWsG,EAAaG,KAAK,MACzB1G,EAAMoB,cAFZ,CAGEG,MAAOvB,EAAMuB,MACboF,SAAU3G,EAAM2E,WAGpB,MACF,IAAK,WACH0B,EACE,4CACEpG,UAAWsG,EAAaG,KAAK,MACzB1G,EAAMoB,cAFZ,CAGEG,MAAOvB,EAAMuB,MACboF,SAAU3G,EAAM2E,WAGpB,MACF,IAAK,SACH0B,EACE,4BACEpG,UAAWsG,EAAaG,KAAK,KAC7BnF,MAAOvB,EAAMuB,MACboF,SAAU3G,EAAM2E,SAEf3E,EAAMoB,cAAcgB,QAAQiC,KAAI,SAACuC,GAChC,OACE,4BAAQ9C,IAAK8C,EAAOrF,MAAOA,MAAOqF,EAAOrF,OACtCqF,EAAOvE,kBAMlB,MACF,QACEgE,EACE,yCACEpG,UAAWsG,EAAaG,KAAK,MACzB1G,EAAMoB,cAFZ,CAGEG,MAAOvB,EAAMuB,MACboF,SAAU3G,EAAM2E,WAIxB,OACE,yBAAK1E,UAAWC,IAAQqE,OACtB,2BAAOtE,UAAWC,IAAQ2G,OAAQ7G,EAAM8G,OACvCT,EACAC,K,mBChEPzG,EAAOC,QAAU,CAAC,MAAQ,8CAA8C,aAAe,qDAAqD,QAAU,gDAAgD,gBAAkB","file":"static/js/3.5aae411a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"src-components-Order-CheckOutSummary-CheckOutSummary__CheckoutSummary--fhqit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"src-containers-CheckOut-ContactData-ContactData__ContactData--1spVg\"};","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckOutSummary.css\";\r\nconst CheckOutSumary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingridients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOutSumary;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport classes from \"./ContactData.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport withError from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../../Store/actions/order\";\r\nimport { updatedObject, checkValidity } from \"../../../share/utility\";\r\n\r\nexport class ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP CODE\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 10,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      conutry: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-mail\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"cheapest\" },\r\n          ],\r\n        },\r\n        valid: true,\r\n        validation: {},\r\n        value: \"fastest\",\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n    const order = {\r\n      ingredientes: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  inputChangedHandler = (event, inputIdent) => {\r\n    const updatedFormElement = updatedObject(this.state.orderForm[inputIdent], {\r\n      value: event.target.value,\r\n      valid: checkValidity(\r\n        event.target.value,\r\n        this.state.orderForm[inputIdent].validation\r\n      ),\r\n      touched: true,\r\n    });\r\n    const updatedOrderForm = updatedObject(this.state.orderForm, {\r\n      [inputIdent]: updatedFormElement,\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifiers in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifiers].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((formElement) => {\r\n          return (\r\n            <Input\r\n              key={formElement.id}\r\n              elementName={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              elementConfig={formElement.config.elementConfig}\r\n              value={formElement.config.value}\r\n              invalid={!formElement.config.valid}\r\n              shouldValidate={formElement.config.validation}\r\n              touched={formElement.config.touched}\r\n              Changed={(event) =>\r\n                this.inputChangedHandler(event, formElement.id)\r\n              }\r\n            />\r\n          );\r\n        })}\r\n        <Button\r\n          btnType=\"Success\"\r\n          clicked={this.orderHandler}\r\n          disabled={!this.state.formIsValid}\r\n        >\r\n          Order\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.BurgerBuilder.ingredients,\r\n    price: state.BurgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withError(ContactData, axios));\r\n","import React, { Component } from \"react\";\r\nimport CheckOutSummary from \"../../components/Order/CheckOutSummary/CheckOutSumary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class CheckOut extends Component {\r\n  checkoutCancelled = () => this.props.history.goBack();\r\n  checkoutContinue = () => this.props.history.replace(\"/checkout/contact-data\");\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ings) {\r\n      const purchaseRedirect = this.props.purchase ? <Redirect to=\"/\" /> : null;\r\n      summary = (\r\n        <div>\r\n          {purchaseRedirect}\r\n          <CheckOutSummary\r\n            ingridients={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelled}\r\n            checkoutContinued={this.checkoutContinue}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-data\"}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.BurgerBuilder.ingredients,\r\n    purchase: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CheckOut);\r\n","import React from \"react\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  let ValidationError = null;\r\n  const inputClasses = [classes.InputElement];\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n    ValidationError = (\r\n      <p>Please enter a(an) {props.elementName} valid value!!</p>\r\n    );\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.Changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.Changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.Changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.displayValue}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.Changed}\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {ValidationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"src-components-UI-Input-Input__Label--_n-1m\",\"InputElement\":\"src-components-UI-Input-Input__InputElement--2-aFx\",\"Invalid\":\"src-components-UI-Input-Input__Invalid--1sl1p\",\"ValidationError\":\"src-components-UI-Input-Input__ValidationError--1ElSg\"};"],"sourceRoot":""}
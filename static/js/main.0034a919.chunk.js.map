{"version":3,"sources":["components/Burger/BurgerIngridient/BurgerIngridient.css","components/Burger/BurgerControls/BuildControl/BuildControl.css","components/Layout/Layout.css","components/Burger/Burger.css","components/Burger/BurgerControls/BurgeControls.css","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngridient/BurgerIngridient.js","components/Burger/Burger.js","components/Burger/BurgerControls/BuildControl/BuildControl.js","components/Burger/BurgerControls/BurgerControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","Layout","className","classes","Content","BurgerIngridient","ingridient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","Burger","transformedIngridients","Object","keys","ingridients","map","igKey","console","log","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","onClick","Remove","disabled","More","Added","controls","BurgerControls","BuildControls","price","toFixed","control","ingridientAdded","ingridientRemove","INGRIDIENTE_PRICES","meat","BurgerBuilder","state","totalPrice","addIngridientHandler","updatedCounted","updateIngridients","setState","removeIngridientHandler","oldCount","disabledInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0034a919.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__BreadBottom--KNGSI\",\"BreadTop\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__BreadTop--gLKm8\",\"Seeds1\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__Seeds1--1CC-L\",\"Seeds2\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__Seeds2--2JQuo\",\"Meat\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__Meat--fpeUf\",\"Cheese\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__Cheese--2ZngM\",\"Salad\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__Salad--3lXW9\",\"Bacon\":\"src-components-Burger-BurgerIngridient-BurgerIngridient__Bacon--3E3hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"src-components-Burger-BurgerControls-BuildControl-BuildControl__BuildControl--3M2BP\",\"Label\":\"src-components-Burger-BurgerControls-BuildControl-BuildControl__Label--2aJ8X\",\"Less\":\"src-components-Burger-BurgerControls-BuildControl-BuildControl__Less--39tyZ\",\"More\":\"src-components-Burger-BurgerControls-BuildControl-BuildControl__More--1dcab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"src-components-Layout-Layout__Content--LhJtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"src-components-Burger-Burger__Burger--3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"src-components-Burger-BurgerControls-BurgeControls__BuildControls--3RHMH\"};","const Auxiliary = (props) => props.children;\r\n\r\nexport default Auxiliary;\r\n","import React from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div>Toolbar,SideDrawer,Backdrop</div>\r\n      <main className={classes.Content}>{props.children}</main>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngridient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngridient extends Component {\r\n  render() {\r\n    let ingridient = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingridient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingridient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingridient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case \"Cheese\":\r\n        ingridient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"Salad\":\r\n        ingridient = <div className={classes.Salad}></div>;\r\n        break;\r\n      case \"Bacon\":\r\n        ingridient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingridient = null;\r\n    }\r\n\r\n    return ingridient;\r\n  }\r\n}\r\n\r\nBurgerIngridient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngridient;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.css\";\r\nimport BurgerIngridient from \"./BurgerIngridient/BurgerIngridient\";\r\n\r\nconst Burger = (props) => {\r\n  let transformedIngridients = Object.keys(props.ingridients)\r\n    .map((igKey) => {\r\n      console.log(props.ingridients[igKey]);\r\n      return [...Array(props.ingridients[igKey])].map((_, i) => {\r\n        // console.log(i);\r\n        return <BurgerIngridient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngridients.length === 0) {\r\n    transformedIngridients = <p>Please Introduce ingridientes</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngridient type=\"bread-top\" />\r\n      {transformedIngridients}\r\n      <BurgerIngridient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\n\r\nconst BuildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label}</div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.Remove}\r\n        disabled={props.disabled}\r\n      >\r\n        Less\r\n      </button>\r\n      <button className={classes.More} onClick={props.Added}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport classes from \"./BurgeControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"Salad\" },\r\n  { label: \"Bacon\", type: \"Bacon\" },\r\n  { label: \"Cheese\", type: \"Cheese\" },\r\n  { label: \"meat\", type: \"meat\" },\r\n];\r\n\r\nconst BurgerControls = (props) => {\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current Price : <strong>{props.price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map((control) => {\r\n        return (\r\n          <BuildControl\r\n            key={control.label}\r\n            label={control.label}\r\n            Added={() => props.ingridientAdded(control.label)}\r\n            Remove={() => props.ingridientRemove(control.label)}\r\n            disabled={props.disabled[control.type]}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerControls;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BurgerControls from \"../../components/Burger/BurgerControls/BurgerControls\";\r\n\r\nconst INGRIDIENTE_PRICES = {\r\n  Salad: 0.5,\r\n  Cheese: 0.4,\r\n  meat: 1.3,\r\n  Bacon: 0.6,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingridients: {\r\n      Salad: 0,\r\n      Bacon: 0,\r\n      Cheese: 0,\r\n      meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n  };\r\n  addIngridientHandler = (type) => {\r\n    const oldCount = this.state.ingridients[type];\r\n    const updatedCounted = oldCount + 1;\r\n    const updateIngridients = {\r\n      ...this.state.ingridients,\r\n    };\r\n    updateIngridients[type] = updatedCounted;\r\n\r\n    this.setState({\r\n      totalPrice: this.state.totalPrice + INGRIDIENTE_PRICES[type],\r\n      ingridients: updateIngridients,\r\n    });\r\n  };\r\n  removeIngridientHandler = (type) => {\r\n    const oldCount = this.state.ingridients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCounted = oldCount - 1;\r\n    const updateIngridients = {\r\n      ...this.state.ingridients,\r\n    };\r\n    updateIngridients[type] = updatedCounted;\r\n\r\n    this.setState({\r\n      totalPrice: this.state.totalPrice - INGRIDIENTE_PRICES[type],\r\n      ingridients: updateIngridients,\r\n    });\r\n  };\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingridients,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    console.log(this.props.totalPrice);\r\n    return (\r\n      <Aux>\r\n        <Burger ingridients={this.state.ingridients} />\r\n        <BurgerControls\r\n          ingridientAdded={this.addIngridientHandler}\r\n          ingridientRemove={this.removeIngridientHandler}\r\n          disabled={disabledInfo}\r\n          price={this.state.totalPrice}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\nimport LayOut from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nfunction App() {\n  return (\n    <div>\n      <LayOut>\n        <BurgerBuilder />\n      </LayOut>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}